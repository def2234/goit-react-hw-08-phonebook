{"version":3,"file":"static/js/450.de5b9d40.chunk.js","mappings":"qPA6FA,UArFc,WACZ,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACJH,IACFI,MACE,sFAEFN,GAASO,EAAAA,EAAAA,MAEZ,GAAE,CAACL,EAAOF,IAEX,IAAMQ,EAAoB,SAAAC,GACxB,OAAQA,EAAEC,OAAOC,MACf,IAAK,QACHd,EAASY,EAAEC,OAAOE,OAClB,MAEF,IAAK,WACHb,EAAYU,EAAEC,OAAOE,OAM1B,EAOD,OACE,+BACE,UAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACFC,UAAW,QAEbC,SAZmB,SAAAP,GACvBA,EAAEQ,iBACFjB,GAASkB,EAAAA,EAAAA,IAAM,CAAEtB,MAAAA,EAAOE,SAAAA,IACzB,EAUKqB,YAAU,EACVC,aAAa,KAPf,WASE,SAAC,IAAD,CACEN,GAAI,CACFO,QAAS,QACTC,aAAc,QAEhBC,GAAG,iBACHC,MAAM,QACNC,QAAQ,WACRC,KAAK,OACLf,KAAK,QACLC,MAAOhB,EACP+B,SAAUnB,KAGZ,SAAC,IAAD,CACEM,GAAI,CAAEO,QAAS,QAASC,aAAc,QACtCC,GAAG,iBACHC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACLf,KAAK,WACLC,MAAOd,EACP6B,SAAUnB,KAGZ,SAAC,IAAD,CACEM,GAAI,CAAEO,QAAS,SACfI,QAAQ,WACRG,KAAK,QACLF,KAAK,SACLG,UAAUjC,IAASE,EALrB,yBAYP,C","sources":["page/LoginPage.js"],"sourcesContent":["import { Box, Button, TextField } from '@mui/material';\nimport { logIn } from 'Redux/auth/authOperations';\nimport { getError } from 'Redux/auth/authSelectors';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { clearAuthError } from 'Redux/auth/authSlice';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    if (error) {\n      alert(\n        'Wrong email or password, please check your email or password â€” and try again!'\n      );\n      dispatch(clearAuthError());\n    }\n  }, [error, dispatch]);\n\n  const handleChangeValue = e => {\n    switch (e.target.name) {\n      case 'email':\n        setEmail(e.target.value);\n        break;\n\n      case 'password':\n        setPassword(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    dispatch(logIn({ email, password }));\n  };\n\n  return (\n    <>\n      <Box\n        component=\"form\"\n        sx={{\n          marginTop: '20px',\n        }}\n        onSubmit={handleSubmitForm}\n        noValidate\n        autoComplete=\"on\"\n      >\n        <TextField\n          sx={{\n            display: 'block',\n            marginBottom: '10px',\n          }}\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n          type=\"text\"\n          name=\"email\"\n          value={email}\n          onChange={handleChangeValue}\n        />\n\n        <TextField\n          sx={{ display: 'block', marginBottom: '10px' }}\n          id=\"outlined-basic\"\n          label=\"Password\"\n          variant=\"outlined\"\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChangeValue}\n        />\n\n        <Button\n          sx={{ display: 'block' }}\n          variant=\"outlined\"\n          size=\"small\"\n          type=\"submit\"\n          disabled={email && password ? false : true}\n        >\n          Sign Up\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["useState","email","setEmail","password","setPassword","dispatch","useDispatch","error","useSelector","getError","useEffect","alert","clearAuthError","handleChangeValue","e","target","name","value","component","sx","marginTop","onSubmit","preventDefault","logIn","noValidate","autoComplete","display","marginBottom","id","label","variant","type","onChange","size","disabled"],"sourceRoot":""}