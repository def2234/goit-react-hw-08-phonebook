{"version":3,"file":"static/js/859.0bba0276.chunk.js","mappings":"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","sources":["Redux/contacts/selectors.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/FormContacts/FormContacts.js","page/ContactsPage.js"],"sourcesContent":["export const getItems = state => state.contacts.items;\nexport const getError = state => state.contacts.error;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getFilter = state => state.filter;\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteContact, fetchContacts } from 'Redux/operationsApi';\nimport {\n  getError,\n  getFilter,\n  getIsLoading,\n  getItems,\n} from 'Redux/contacts/selectors';\nimport { Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport Avatar from '@mui/material/Avatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItem from '@mui/material/ListItem';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport const ContactsList = () => {\n  const items = useSelector(getItems);\n  const error = useSelector(getError);\n  const isLoading = useSelector(getIsLoading);\n\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const normalizedName = filter.toLowerCase();\n  const filterContact = items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedName)\n  );\n\n  return (\n    <ul>\n      {isLoading && <CircularProgress />}\n      {error && <p>{error}</p>}\n      {filterContact.map(contact => {\n        return (\n          <ListItem\n            sx={{ display: 'flex', alignItems: 'center', width: '400px' }}\n            key={contact.id}\n          >\n            <ListItemAvatar>\n              <Avatar>\n                <ContactPhoneIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={contact.name} secondary={contact.number} />\n            <Button\n              size=\"small\"\n              variant=\"outlined\"\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n              startIcon={<DeleteIcon />}\n            >\n              Delete\n            </Button>\n          </ListItem>\n        );\n      })}\n    </ul>\n  );\n};\n\n// {\n/* <ListItem key={contact.id}>\n//             <P>{contact.name}:</P>\n//             <Span>{contact.number}</Span>\n//             <Button\n//               size=\"small\"\n//               variant=\"outlined\"\n//               type=\"button\"\n//               onClick={() => dispatch(deleteContact(contact.id))}\n//               startIcon={<DeleteIcon />}\n//             >\n//               Delete\n//             </Button>\n//           </ListItem> */\n// }\n","import { TextField } from '@mui/material';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addFilter } from 'Redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  const changeFilter = e => {\n    dispatch(addFilter(e.target.value));\n  };\n  return (\n    <TextField\n      id=\"standard-basic\"\n      label=\"Find contacts by name\"\n      variant=\"standard\"\n      type=\"text\"\n      value={filter}\n      onChange={changeFilter}\n    />\n  );\n};\n","import { useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'Redux/operationsApi';\nimport { getItems } from 'Redux/contacts/selectors';\nimport { Box, Button, TextField } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\n\nexport function FormContacts() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dataContact = { name, number };\n\n  const items = useSelector(getItems);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = ({ target }) => {\n    if (target.name === 'name') {\n      setName(target.value);\n    } else {\n      setNumber(target.value);\n    }\n  };\n\n  const handleAddContact = e => {\n    if (name === '') {\n      return;\n    }\n    const toFind = name.toLowerCase();\n    if (items.find(item => item.name.toLowerCase() === toFind)) {\n      alert(`${name} is alrady in contacts`);\n    } else {\n      console.log(dataContact);\n      dispatch(addContact(dataContact));\n      resetInput();\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    handleAddContact();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Box\n      onSubmit={handleSubmit}\n      component=\"form\"\n      sx={{\n        marginTop: '20px',\n      }}\n      noValidate\n      autoComplete=\"on\"\n    >\n      <TextField\n        sx={{ display: 'block', marginBottom: '10px' }}\n        id=\"standard-basic\"\n        label=\"Name\"\n        variant=\"standard\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={handleInputChange}\n        value={name}\n      />\n\n      <TextField\n        sx={{ display: 'block', marginBottom: '10px' }}\n        id=\"standard-basic\"\n        label=\"Number\"\n        variant=\"standard\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={handleInputChange}\n        value={number}\n      />\n\n      <Button\n        sx={{ display: 'inline-block' }}\n        startIcon={<AddIcon />}\n        size=\"small\"\n        variant=\"outlined\"\n        type=\"button\"\n        disabled={name && number ? false : true}\n        name=\"addContact\"\n        onClick={handleAddContact}\n      >\n        Add Contact\n      </Button>\n    </Box>\n  );\n}\n\nexport default FormContacts;\n","import { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Filter } from 'components/Filter/Filter';\nimport FormContacts from 'components/FormContacts/FormContacts';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <FormContacts />\n      <Filter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getItems","state","contacts","items","getError","error","getIsLoading","isLoading","getFilter","filter","ContactsList","useSelector","dispatch","useDispatch","useEffect","fetchContacts","normalizedName","toLowerCase","filterContact","contact","name","includes","CircularProgress","map","ListItem","sx","display","alignItems","width","ListItemAvatar","Avatar","ContactPhone","ListItemText","primary","secondary","number","Button","size","variant","type","onClick","deleteContact","id","startIcon","Delete","Filter","TextField","label","value","onChange","e","addFilter","target","useState","setName","setNumber","dataContact","handleInputChange","handleAddContact","toFind","find","item","alert","console","log","addContact","resetInput","Box","onSubmit","preventDefault","component","marginTop","noValidate","autoComplete","marginBottom","pattern","title","required","Add","disabled"],"sourceRoot":""}