{"version":3,"file":"static/js/458.36647cdb.chunk.js","mappings":"+PA6HA,UArHiB,WACf,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAEpBC,EAAoB,SAAAC,GACxB,OAAQA,EAAEC,OAAOX,MACf,IAAK,OACHC,EAAQS,EAAEC,OAAOC,OAEjB,MACF,IAAK,QACHT,EAASO,EAAEC,OAAOC,OAClB,MAEF,IAAK,WACHP,EAAYK,EAAEC,OAAOC,OAM1B,EAQKC,GAAWC,EAAAA,EAAAA,MASjB,OACE,gCACGR,IACC,UAAC,IAAD,CACES,SAAS,QACTC,GAAI,CACFC,UAAW,OACXC,MAAO,QACPC,SAAU,WACVC,MAAO,OACPC,IAAK,SAPT,WAUE,SAAC,IAAD,oBAVF,kDAW6C,KAC3C,mDAGJ,UAAC,IAAD,CACEC,SA1BmB,SAAAZ,GACvBA,EAAEa,iBAEFV,GAASW,EAAAA,EAAAA,IAAS,CAAExB,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KAVjCH,EAAQ,IACRE,EAAS,IACTE,EAAY,GAUb,EAsBKoB,UAAU,OACVT,GAAI,CACFC,UAAW,QAEbS,YAAU,EACVC,aAAa,KAPf,WASE,SAAC,IAAD,CACEX,GAAI,CAAEY,QAAS,QAASC,aAAc,QACtCC,GAAG,iBACHC,MAAM,OACNC,QAAQ,WACRpB,MAAOZ,EACPiC,SAAUxB,EACVyB,KAAK,OACLlC,KAAK,OACLmC,UAAQ,KAGV,SAAC,IAAD,CACEnB,GAAI,CAAEY,QAAS,QAASC,aAAc,QACtCC,GAAG,iBACHC,MAAM,QACNC,QAAQ,WACRpB,MAAOV,EACP+B,SAAUxB,EACVyB,KAAK,QACLlC,KAAK,QACLmC,UAAQ,KAGV,SAAC,IAAD,CACEnB,GAAI,CAAEY,QAAS,QAASC,aAAc,QACtCC,GAAG,iBACHC,MAAM,WACNC,QAAQ,WACRpB,MAAOR,EACP6B,SAAUxB,EACVyB,KAAK,WACLlC,KAAK,WACLmC,UAAQ,KAGV,SAAC,IAAD,CACEC,KAAK,QACLpB,GAAI,CAAEY,QAAS,SACfI,QAAQ,WACRE,KAAK,SACLG,WAAUrC,GAAQE,GAASE,GAL7B,+BAYP,C","sources":["page/RegisterPage.js"],"sourcesContent":["import { Box, Button, TextField } from '@mui/material';\nimport { register } from 'Redux/auth/authOperations';\nimport { getError } from 'Redux/auth/authSelectors';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Alert from '@mui/material/Alert';\nimport AlertTitle from '@mui/material/AlertTitle';\n\nconst Register = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const error = useSelector(getError);\n\n  const handleChangeValue = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n\n        break;\n      case 'email':\n        setEmail(e.target.value);\n        break;\n\n      case 'password':\n        setPassword(e.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n\n    dispatch(register({ name, email, password }));\n    resetForm();\n  };\n\n  return (\n    <>\n      {error && (\n        <Alert\n          severity=\"error\"\n          sx={{\n            marginTop: '20px',\n            width: '400px',\n            position: 'absolute',\n            right: '15px',\n            top: '100px',\n          }}\n        >\n          <AlertTitle>Error</AlertTitle>\n          Please double-check or enter unique data â€”{' '}\n          <strong>and try again!</strong>\n        </Alert>\n      )}\n      <Box\n        onSubmit={handleSubmitForm}\n        component=\"form\"\n        sx={{\n          marginTop: '20px',\n        }}\n        noValidate\n        autoComplete=\"on\"\n      >\n        <TextField\n          sx={{ display: 'block', marginBottom: '10px' }}\n          id=\"outlined-basic\"\n          label=\"Name\"\n          variant=\"outlined\"\n          value={name}\n          onChange={handleChangeValue}\n          type=\"text\"\n          name=\"name\"\n          required\n        />\n\n        <TextField\n          sx={{ display: 'block', marginBottom: '10px' }}\n          id=\"outlined-basic\"\n          label=\"Email\"\n          variant=\"outlined\"\n          value={email}\n          onChange={handleChangeValue}\n          type=\"email\"\n          name=\"email\"\n          required\n        />\n\n        <TextField\n          sx={{ display: 'block', marginBottom: '10px' }}\n          id=\"outlined-basic\"\n          label=\"Password\"\n          variant=\"outlined\"\n          value={password}\n          onChange={handleChangeValue}\n          type=\"password\"\n          name=\"password\"\n          required\n        />\n\n        <Button\n          size=\"small\"\n          sx={{ display: 'block' }}\n          variant=\"outlined\"\n          type=\"submit\"\n          disabled={name && email && password ? false : true}\n        >\n          Registration\n        </Button>\n      </Box>\n    </>\n  );\n};\n\nexport default Register;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","error","useSelector","getError","handleChangeValue","e","target","value","dispatch","useDispatch","severity","sx","marginTop","width","position","right","top","onSubmit","preventDefault","register","component","noValidate","autoComplete","display","marginBottom","id","label","variant","onChange","type","required","size","disabled"],"sourceRoot":""}